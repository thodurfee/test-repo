g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(toupper(i)),fill="Condition")
}
)
plots
plots <- sapply(list("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(toupper(i)),fill="Condition")
},
simplify = FALSE,USE.NAMES = TRUE)
plots
plots[["measure1"]]
str(plots)
plots <- sapply(c("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(toupper(i)),fill="Condition")
},
simplify = FALSE,USE.NAMES = TRUE)
plots[["measure1"]]
plots <- sapply(c("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(toupper(i)),fill="Condition")
},
USE.NAMES = TRUE)
plots[["measure1"]]
plots
plots <- sapply(c("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(toupper(i)),fill="Condition")
},
simplify = FALSE, USE.NAMES = TRUE)
plots
plots <- sapply(c("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(capitalize(i)),fill="Condition")
},
simplify = FALSE, USE.NAMES = TRUE)
plots
plots <- sapply(c("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(capitalize(i)),fill="Condition")
summary(anova(lm(i~condition,data = somedata)))
},
simplify = FALSE, USE.NAMES = TRUE)
plots <- sapply(c("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(capitalize(i)),fill="Condition")
summary(anova(lm(i~"condition",data = somedata)))
},
simplify = FALSE, USE.NAMES = TRUE)
plots <- sapply(c("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(capitalize(i)),fill="Condition")
summary(aov(lm(i~"condition",data = somedata)))
},
simplify = FALSE, USE.NAMES = TRUE)
plots <- sapply(c("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(capitalize(i)),fill="Condition")
summary(aov(lm(i~condition,data = somedata)))
},
simplify = FALSE, USE.NAMES = TRUE)
plots <- sapply(c("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(capitalize(i)),fill="Condition")
summary(aov(lm(i~condition,data = somedata)))
},
simplify = FALSE, USE.NAMES = TRUE)
plots <- sapply(c("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(capitalize(i)),fill="Condition")
lm(i~condition,data = somedata)
},
simplify = FALSE, USE.NAMES = TRUE)
plots <- sapply(c("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(capitalize(i)),fill="Condition")
lm(i~somedata$condition,data = somedata)
},
simplify = FALSE, USE.NAMES = TRUE)
plots <- sapply(c("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(capitalize(i)),fill="Condition")
lm(somedata$i~somedata$condition,data = somedata)
},
simplify = FALSE, USE.NAMES = TRUE)
plots <- sapply(c("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(capitalize(i)),fill="Condition")
lm(i~paste0("~condition"),data = somedata)
},
simplify = FALSE, USE.NAMES = TRUE)
plots <- sapply(c("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(capitalize(i)),fill="Condition")
lm(i,paste0("~condition"),data = somedata)
},
simplify = FALSE, USE.NAMES = TRUE)
plots <- sapply(c("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(capitalize(i)),fill="Condition")
lm(paste0(i,"~condition"),data = somedata)
},
simplify = FALSE, USE.NAMES = TRUE)
plots
plots <- sapply(c("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(capitalize(i)),fill="Condition")
summary(anova(lm(paste0(i,"~condition"),data = somedata)))
},
simplify = FALSE, USE.NAMES = TRUE)
plots
plots[["measure1"]]
str(plots)
plots <- sapply(c("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(capitalize(i)),fill="Condition")
summary(anova(lm(paste0(i,"~condition"),data = somedata)))
},
simplify = FALSE, USE.NAMES = TRUE)
anovas <- sapply(c("measure1","measure2"), function(i){
summary(anova(lm(paste0(i,"~condition"),data = somedata)))
},
simplify = FALSE, USE.NAMES = TRUE)
plots[["measure1"]]
anovas[["measure1"]]
plots <- sapply(c("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(capitalize(i)),fill="Condition")
},
simplify = FALSE, USE.NAMES = TRUE)
anovas <- sapply(c("measure1","measure2"), function(i){
summary(anova(lm(paste0(i,"~condition"),data = somedata)))
},
simplify = FALSE, USE.NAMES = TRUE)
plots[["measure1"]]
anovas[["measure1"]]
plots <- sapply(c("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(capitalize(i)),fill="Condition")
},
simplify = FALSE, USE.NAMES = TRUE)
anovas <- sapply(c("measure1","measure2"), function(i){
summary(aov(lm(paste0(i,"~condition"),data = somedata)))
},
simplify = FALSE, USE.NAMES = TRUE)
plots[["measure1"]]
anovas[["measure1"]]
condition <- c(rep("A",100),rep("B",100))
dv1 <- c(rnorm(100,4,1.5),rnorm(100,6,1.5))
dv2 <- c(rnorm(100,6,1.5),rnorm(100,4,1.5))
fakedata <- data.frame(condition,dv1,dv2)
write.table(fakedata,"fakedata.cvs",sep=",",row.names = FALSE,col.names = TRUE)
setwd("Google Drive/The Data Scientist’s Toolbox/test-repo/")
condition <- c(rep("A",100),rep("B",100))
dv1 <- c(rnorm(100,4,1.5),rnorm(100,6,1.5))
dv2 <- c(rnorm(100,6,1.5),rnorm(100,4,1.5))
fakedata <- data.frame(condition,dv1,dv2)
write.table(fakedata,"fakedata.cvs",sep=",",row.names = FALSE,col.names = TRUE)
setwd("Google Drive/The Data Scientist’s Toolbox/test-repo/")
condition <- c(rep("A",100),rep("B",100))
dv1 <- c(rnorm(100,4,1.5),rnorm(100,6,1.5))
dv2 <- c(rnorm(100,6,1.5),rnorm(100,4,1.5))
fakedata <- data.frame(condition,dv1,dv2)
write.table(fakedata,"fakedata.csv",sep=",",row.names = FALSE,col.names = TRUE)
fakedata.url <- url("https://github.com/nmmichalak/test-repo/blob/master/fakedata.csv")
fakedata <- read.csv(fakedata.url,sep=",",header = TRUE)
head(fakedata)
fakedata.url <- url("https://raw.githubusercontent.com/nmmichalak/test-repo/master/fakedata.csv")
fakedata <- read.csv(fakedata.url,sep=",",header = TRUE)
head(fakedata)
library(ggplot2)
library(Hmisc)
densities <- sapply(list("dv1","dv2"),function(i) {
ggplot(data=fakedata,aes_string(y=i,color="condition")) +
geom_density(aes_string(x=i,color="condition"),alpha=.2) +
labs(y=NULL,x=paste(capitalize(i)),color="Condition",title="Distributions by Condition")
},
simplify = FALSE,USE.NAMES = TRUE)
plots <- sapply(list("dv1","dv2"),function(i) {
ggplot(data=fakedata,aes_string(x="condition",y=i,fill="condition")) +
stat_summary(fun.data="mean_cl_boot",aes_string(x="condition",y=i),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(x="condition",y=i),geom="errorbar",width=.2) +
labs(x=NULL,y=paste(capitalize(i)),fill="Condition",title="95% CIs")
},
simplify = FALSE,USE.NAMES = TRUE)
anovas <- sapply(list("dv1","dv2"),function(i) {
formula <- paste0(i,"~condition")
summary(aov(lm(formula,fakedata)))
},
simplify = FALSE,USE.NAMES = TRUE)
densities
densities <- sapply(list("dv1","dv2"),function(i) {
ggplot(data=fakedata,aes_string(y=i,color="condition")) +
geom_density(aes_string(x=i,color="condition"),alpha=.2) +
labs(x=paste(capitalize(i)),color="Condition",title="Distributions by Condition")
},
simplify = FALSE,USE.NAMES = TRUE)
densities
densities <- sapply(list("dv1","dv2"),function(i) {
ggplot(data=fakedata,aes_string(x=i,color="condition")) +
geom_density(aes_string(x=i,color="condition"),alpha=.2) +
labs(x=paste(capitalize(i)),color="Condition",title="Distributions by Condition")
},
simplify = FALSE,USE.NAMES = TRUE)
densities
densities <- sapply(list("dv1","dv2"),function(i) {
ggplot(data=fakedata,aes_string(x=i,fill="condition")) +
geom_density(aes_string(x=i,fill="condition"),alpha=.2) +
labs(x=paste(capitalize(i)),color="Condition",title="Distributions by Condition")
},
simplify = FALSE,USE.NAMES = TRUE)
densities
setwd("Google Drive/The Data Scientist’s Toolbox/test-repo/")
condition <- c(rep("A",100),rep("B",100))
dv1 <- c(rnorm(100,4,1.5),rnorm(100,6,1.5))
dv2 <- c(rnorm(100,6,1.5),rnorm(100,4,1.5))
fakedata <- data.frame(condition,dv1,dv2)
write.table(fakedata,"fakedata.csv",sep=",",row.names = FALSE,col.names = TRUE)
fakedata.url <- url("https://raw.githubusercontent.com/nmmichalak/test-repo/master/fakedata.csv")
fakedata <- read.csv(fakedata.url,sep=",",header = TRUE)
head(fakedata)
library(ggplot2)
library(Hmisc)
densities <- sapply(list("dv1","dv2"),function(i) {
ggplot(data=fakedata,aes_string(x=i,fill="condition")) +
geom_density(aes_string(x=i,fill="condition"),alpha=.2) +
labs(x=paste(toupper(i)),color="Condition",title="Distributions by Condition")
},
simplify = FALSE,USE.NAMES = TRUE)
plots <- sapply(list("dv1","dv2"),function(i) {
ggplot(data=fakedata,aes_string(x="condition",y=i,fill="condition")) +
stat_summary(fun.data="mean_cl_boot",aes_string(x="condition",y=i),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(x="condition",y=i),geom="errorbar",width=.2) +
labs(x=NULL,y=paste(toupper(i)),fill="Condition",title="95% CIs")
},
simplify = FALSE,USE.NAMES = TRUE)
anovas <- sapply(list("dv1","dv2"),function(i) {
formula <- paste0(i,"~condition")
summary(aov(lm(formula,fakedata)))
},
simplify = FALSE,USE.NAMES = TRUE)
densities
plots
anovas
densities[[1]]
densities[["dv1"]]
densities <- sapply(list("dv1","dv2"),function(i) {
ggplot(data=fakedata,aes_string(x=i,fill="condition")) +
geom_density(aes_string(x=i,fill="condition"),alpha=.2) +
labs(x=paste(toupper(i)),color="Condition",title="Distributions by Condition") #sapply plot function over list of variables names in the dataset
},
simplify = FALSE,USE.NAMES = TRUE)
densities[["dv1"]]
densities[[dv1]]
densities[["dv1"]]
densities <- sapply(list("dv1","dv2"),function(i) {
ggplot(data=fakedata,aes_string(x=i,fill="condition")) +
geom_density(aes_string(x=i,fill="condition"),alpha=.2) +
labs(x=paste(toupper(i)),color="Condition",title="Distributions by Condition") #sapply plot function over list of variables names in the dataset
},
simplify = FALSE,USE.NAMES = TRUE)
densities[["dv1"]]
densities["dv1"]
densities$dv1
str(densities)
plots[["dv1"]]
fakedata.url <- url("https://raw.githubusercontent.com/nmmichalak/test-repo/master/fakedata.csv") #make the url an object with the url function (make sure it's raw on GitHub)
fakedata <- read.csv(fakedata.url,sep=",",header = TRUE) #load it like any other csv
head(fakedata) #see what it looks like
library(ggplot2) #duh
densities <- sapply(list("dv1","dv2"),function(i) {
ggplot(data=fakedata,aes_string(x=i,fill="condition")) +
geom_density(aes_string(x=i,fill="condition"),alpha=.2) +
labs(x=paste(toupper(i)),color="Condition",title="Distributions by Condition") #sapply plot function over list of variables names in the dataset
},
simplify = FALSE,USE.NAMES = TRUE) #simplify returns output as list, USE.NAMES (only in sapply) names the objects in the list (nice for calling them later)
plots <- sapply(list("dv1","dv2"),function(i) {
ggplot(data=fakedata,aes_string(x="condition",y=i,fill="condition")) +
stat_summary(fun.data="mean_cl_boot",aes_string(x="condition",y=i),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(x="condition",y=i),geom="errorbar",width=.2) +
labs(x=NULL,y=paste(toupper(i)),fill="Condition",title="95% CIs")
},
simplify = FALSE,USE.NAMES = TRUE)
anovas <- sapply(list("dv1","dv2"),function(i) {
formula <- paste0(i,"~condition") #for some reason you need to paste the text for the formula argument here
summary(aov(lm(formula,fakedata)))
},
simplify = FALSE,USE.NAMES = TRUE)
densities[["dv1"]]
somedata <- data.frame(condition=c(rep("a",100),rep("b",100)),measure1=c(rnorm(100,0,1),rnorm(100,5,1)),measure2=c(rnorm(100,-5,1),rnorm(100,0,1)))
library(ggplot2)
plots <- sapply(c("measure1","measure2"), function(i){
g <- ggplot(somedata,aes_string(x="condition",y=i,fill="condition"))
g + stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(y=i,x="condition"),geom="errorbar",width=.2) +
labs(x=NULL,y=NULL,title=paste(capitalize(i)),fill="Condition")
},
simplify = FALSE, USE.NAMES = TRUE)
anovas <- sapply(c("measure1","measure2"), function(i){
summary(aov(lm(paste0(i,"~condition"),data = somedata)))
},
simplify = FALSE, USE.NAMES = TRUE)
plots[["measure1"]]
anovas[["measure1"]]
str(plots)
str(anovas)
setwd("~/")
setwd("Google Drive/The Data Scientist’s Toolbox/test-repo/")
#ignore this because this is my GitHub repo that's on GitHub and on my computer
condition <- c(rep("A",1000),rep("B",1000)) #make condition factor
dv1 <- c(rnorm(1000,4,1.5),rnorm(1000,6,1.5)) #make one dv
dv2 <- c(rnorm(1000,6,1.5),rnorm(1000,4,1.5)) #and another
fakedata <- data.frame(condition,dv1,dv2) #combine above into a dataframe
write.table(fakedata,"fakedata.csv",sep=",",row.names = FALSE,col.names = TRUE) #save as a csv
library(dplyr)
fakedata <- tbl_df(fakedata)
descriptives <- sapply(c("dv1","dv2"),function(i) {
fakedata %>% group_by(.,condition) %>% summarise(.,n=n(),
M=mean(cat(i)),
SD=sd(cat(i)))
},
simplify = FALSE,USE.NAMES = TRUE)
str(fakedata)
descriptives <- sapply(c("dv1","dv2"),function(i) {
fakedata %>% group_by(.,condition) %>% summarise(.,n=n(),
M=mean(i),
SD=sd(i))
},
simplify = FALSE,USE.NAMES = TRUE)
fakedata <- tbl_df(fakedata)
descriptives <- sapply(c(dv1,dv2),function(i) {
fakedata %>% group_by(.,condition) %>% summarise(.,n=n(),
M=mean(i),
SD=sd(i))
},
simplify = FALSE,USE.NAMES = TRUE)
kable(descriptives[["dv1"]],format = "pandoc")
library(knitr)
kable(descriptives[["dv1"]],format = "pandoc")
descriptives[["dv1"]]
descriptives[[1]]
descriptives[[2]]
fakedata %>% group_by(.,condition) %>% summarise_by(.,funs(n,mean,sd),i)
fakedata %>% group_by(.,condition) %>% summarise_each(.,funs(n,mean,sd),i)
descriptives <- fakedata %>% group_by(.,condition) %>% summarise_each(.,funs(n,mean,sd),c(dv1,dv2))
descriptives <- fakedata %>% group_by(.,condition) %>% summarise_each(.,funs(length,mean,sd),c(dv1,dv2))
descriptives
setwd("~/")
setwd("Google Drive/The Data Scientist’s Toolbox/test-repo/")
#ignore this because this is my GitHub repo that's on GitHub and on my computer
condition <- c(rep("A",10000),rep("B",1000)) #make condition factor
dv1 <- c(rnorm(10000,4,1.5),rnorm(10000,6,1.5)) #make one dv
dv2 <- c(rnorm(10000,6,1.5),rnorm(10000,4,1.5)) #and another
fakedata <- data.frame(condition,dv1,dv2) #combine above into a dataframe
write.table(fakedata,"fakedata.csv",sep=",",row.names = FALSE,col.names = TRUE) #save as a csv
setwd("~/")
setwd("Google Drive/The Data Scientist’s Toolbox/test-repo/")
#ignore this because this is my GitHub repo that's on GitHub and on my computer
condition <- c(rep("A",10000),rep("B",10000)) #make condition factor
dv1 <- c(rnorm(10000,4,1.5),rnorm(10000,6,1.5)) #make one dv
dv2 <- c(rnorm(10000,6,1.5),rnorm(10000,4,1.5)) #and another
fakedata <- data.frame(condition,dv1,dv2) #combine above into a dataframe
write.table(fakedata,"fakedata.csv",sep=",",row.names = FALSE,col.names = TRUE) #save as a csv
setwd("~/")
setwd("Google Drive/The Data Scientist’s Toolbox/test-repo/")
#ignore this because this is my GitHub repo that's on GitHub and on my computer
condition <- c(rep("A",10000),rep("B",10000)) #make condition factor
dv1 <- c(rnorm(10000,4,1.5),rnorm(10000,6,1.5)) #make one dv
dv2 <- c(rnorm(10000,6,1.5),rnorm(10000,4,1.5)) #and another
fakedata <- data.frame(condition,dv1,dv2) #combine above into a dataframe
write.table(fakedata,"fakedata.csv",sep=",",row.names = FALSE,col.names = TRUE) #save as a csv
---
title: "Analyzing and plotting across multiple Dependent Measures"
author: "Nick Michalak"
date: "June 29, 2015"
output:
html_document:
fig_caption: yes
fig_height: 5
fig_width: 7
highlight: espresso
keep_md: yes
theme: journal
toc: yes
---
##Make fake data and save it to your directory/folder that's also your GitHub repository
```{r}
setwd("~/")
setwd("Google Drive/The Data Scientist’s Toolbox/test-repo/")
#ignore this because this is my GitHub repo that's on GitHub and on my computer
condition <- c(rep("A",10000),rep("B",10000)) #make condition factor
dv1 <- c(rnorm(10000,4,1.5),rnorm(10000,6,1.5)) #make one dv
dv2 <- c(rnorm(10000,6,1.5),rnorm(10000,4,1.5)) #and another
fakedata <- data.frame(condition,dv1,dv2) #combine above into a dataframe
write.table(fakedata,"fakedata.csv",sep=",",row.names = FALSE,col.names = TRUE) #save as a csv
```
> ###get a GitHub [(https://github.com)](https://github.com/) account, dude.
##Load data from your GitHub repository (badass, I know)
```{r}
fakedata.url <- url("https://raw.githubusercontent.com/nmmichalak/test-repo/master/fakedata.csv")
#make the url an object with the url function (make sure it's raw on GitHub)
fakedata <- read.csv(fakedata.url,sep=",",header = TRUE)
#load it like any other csv
head(fakedata) #see what it looks like
```
##Plot code
* ### using sapply to apply plot code (any code, really) over a list of variable names in my fake dataset
```{r}
library(ggplot2) #duh
densities <- sapply(c("dv1","dv2"),function(i) {
ggplot(data=fakedata,aes_string(x=i,fill="condition")) +
geom_density(aes_string(x=i,fill="condition"),alpha=.2) +
labs(x=paste(toupper(i)),color="Condition",title="Distributions by Condition")
#sapply plot function over list of variables names in the dataset
},
simplify = FALSE,USE.NAMES = TRUE)
#simplify returns output as list, USE.NAMES (only in sapply) names the objects in the list (nice for calling
#them later)
plots <- sapply(c("dv1","dv2"),function(i) {
ggplot(data=fakedata,aes_string(x="condition",y=i,fill="condition")) +
stat_summary(fun.data="mean_cl_boot",aes_string(x="condition",y=i),geom="bar") +
stat_summary(fun.data="mean_cl_boot",aes_string(x="condition",y=i),geom="errorbar",width=.2) +
labs(x=NULL,y=paste(toupper(i)),fill="Condition",title="95% CIs")
},
simplify = FALSE,USE.NAMES = TRUE)
anovas <- sapply(c("dv1","dv2"),function(i) {
formula <- paste0(i,"~condition")
#for some reason you need to paste the text for the formula argument here
anova(lm(formula,fakedata))
},
simplify = FALSE,USE.NAMES = TRUE)
library(dplyr)
fakedata <- tbl_df(fakedata)
descriptives <- fakedata %>% group_by(.,condition) %>% summarise_each(.,funs(length,mean,sd),c(dv1,dv2))
```
###DV 1: Density Plots (read: fancy histograms)
```{r}
densities[["dv1"]]
```
###DV1: Mean Plots with 95%CIs
```{r}
library(knitr)
options(digits=3)
kable(descriptives[,c(1,2,4,6)],col.names=c("Condition","n","M","SD"), format = "pandoc")
plots[["dv1"]]
```
###DV1: ANOVA
```{r}
options(digits=3)
kable(anovas[["dv1"]],format="pandoc")
```
###DV 2: Density Plots (read: fancy histograms)
```{r}
densities[["dv2"]]
```
###DV 2: Mean Plots with 95%CIs
```{r}
options(digits=3)
kable(descriptives[,c(1,3,5,7)],col.names=c("Condition","n","M","SD"),format = "pandoc")
plots[["dv2"]]
```
###DV 2: ANOVA
```{r}
options(digits=3)
kable(anovas[["dv2"]],format="pandoc")
```
install.packages("KernSmooth")
y
library(KernSmooth)
